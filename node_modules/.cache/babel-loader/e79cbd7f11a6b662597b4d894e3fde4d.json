{"ast":null,"code":"var _jsxFileName = \"E:\\\\todo\\\\todoList\\\\src\\\\Comonents\\\\Tasks\\\\Tasks\\\\MyTask.jsx\",\n    _s = $RefreshSig$();\n\nimport './MyTask.css';\nimport React, { useState } from 'react';\nimport { addClassNameTask, deleteTask } from '../../../state/store';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function MyTask(props) {\n  _s();\n\n  const [checked, setChecked] = useState(false);\n  const refDiv = /*#__PURE__*/React.createRef();\n\n  let isChecked = event => {\n    if (refDiv.current.className.indexOf('active')) refDiv.current.className.indexOf('active') !== -1 ? setChecked('nonactive') : setChecked('active');\n    props.dispatch(addClassNameTask(props.id, checked));\n  };\n\n  let deleteCurrentTask = () => {\n    props.dispatch(deleteTask(props.id));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `task ${checked}`,\n    id: props.id,\n    onClick: isChecked,\n    ref: refDiv,\n    children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n      className: \"task__Img\",\n      onClick: deleteCurrentTask,\n      viewBox: \"0 0 16 16\",\n      fill: \"none\",\n      stroke: \"#8055FF\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      children: [/*#__PURE__*/_jsxDEV(\"path\", {\n        d: \"M2 3.5H3.5M14 3.5H12.5M5.5 3.5H10.5M5.5 3.5V2.5C5.5 1.94772 5.94772 1.5 6.5 1.5H9.5C10.0523 1.5 10.5 1.94772 10.5 2.5V3.5M5.5 3.5H3.5M10.5 3.5H12.5M3.5 3.5V13.5C3.5 14.0523 3.94772 14.5 4.5 14.5H11.5C12.0523 14.5 12.5 14.0523 12.5 13.5V3.5\",\n        fill: \"none\",\n        \"stroke-linecap\": \"round\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n        d: \"M6.5 6V12M9.5 6V12\",\n        fill: \"none\",\n        \"stroke-linecap\": \"round\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"nameTask\",\n      children: props.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n}\n\n_s(MyTask, \"OiiR1BYWvMsLHMiD2uYkeM3TCO0=\");\n\n_c = MyTask;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyTask\");","map":{"version":3,"names":["React","useState","addClassNameTask","deleteTask","MyTask","props","checked","setChecked","refDiv","createRef","isChecked","event","current","className","indexOf","dispatch","id","deleteCurrentTask","text"],"sources":["E:/todo/todoList/src/Comonents/Tasks/Tasks/MyTask.jsx"],"sourcesContent":["import './MyTask.css'\r\nimport React, { useState } from 'react'\r\nimport { addClassNameTask, deleteTask } from '../../../state/store'\r\n\r\nexport function MyTask(props){\r\n\r\n    const [checked, setChecked] = useState(false);\r\n    const refDiv = React.createRef()\r\n\r\n    let isChecked = (event) =>{\r\n        if(refDiv.current.className.indexOf('active'))\r\n        refDiv.current.className.indexOf('active') !== -1 ? setChecked('nonactive') : setChecked('active');\r\n        props.dispatch(addClassNameTask(props.id, checked));\r\n    }\r\n\r\n    let deleteCurrentTask = () => {\r\n        props.dispatch(deleteTask(props.id));\r\n    }\r\n\r\n    return(\r\n        <div className={`task ${checked}`} id={props.id} onClick={isChecked} ref={refDiv}> \r\n            <svg className='task__Img' onClick={deleteCurrentTask} viewBox=\"0 0 16 16\" fill=\"none\" stroke=\"#8055FF\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                    <path d=\"M2 3.5H3.5M14 3.5H12.5M5.5 3.5H10.5M5.5 3.5V2.5C5.5 1.94772 5.94772 1.5 6.5 1.5H9.5C10.0523 1.5 10.5 1.94772 10.5 2.5V3.5M5.5 3.5H3.5M10.5 3.5H12.5M3.5 3.5V13.5C3.5 14.0523 3.94772 14.5 4.5 14.5H11.5C12.0523 14.5 12.5 14.0523 12.5 13.5V3.5\" fill=\"none\" stroke-linecap=\"round\"/>\r\n                    <path d=\"M6.5 6V12M9.5 6V12\" fill=\"none\" stroke-linecap=\"round\"/>\r\n                </svg>\r\n            <span className='nameTask'>{props.text}</span>\r\n        </div>\r\n    )\r\n}"],"mappings":";;;AAAA,OAAO,cAAP;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,gBAAT,EAA2BC,UAA3B,QAA6C,sBAA7C;;AAEA,OAAO,SAASC,MAAT,CAAgBC,KAAhB,EAAsB;EAAA;;EAEzB,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,KAAD,CAAtC;EACA,MAAMO,MAAM,gBAAGR,KAAK,CAACS,SAAN,EAAf;;EAEA,IAAIC,SAAS,GAAIC,KAAD,IAAU;IACtB,IAAGH,MAAM,CAACI,OAAP,CAAeC,SAAf,CAAyBC,OAAzB,CAAiC,QAAjC,CAAH,EACAN,MAAM,CAACI,OAAP,CAAeC,SAAf,CAAyBC,OAAzB,CAAiC,QAAjC,MAA+C,CAAC,CAAhD,GAAoDP,UAAU,CAAC,WAAD,CAA9D,GAA8EA,UAAU,CAAC,QAAD,CAAxF;IACAF,KAAK,CAACU,QAAN,CAAeb,gBAAgB,CAACG,KAAK,CAACW,EAAP,EAAWV,OAAX,CAA/B;EACH,CAJD;;EAMA,IAAIW,iBAAiB,GAAG,MAAM;IAC1BZ,KAAK,CAACU,QAAN,CAAeZ,UAAU,CAACE,KAAK,CAACW,EAAP,CAAzB;EACH,CAFD;;EAIA,oBACI;IAAK,SAAS,EAAG,QAAOV,OAAQ,EAAhC;IAAmC,EAAE,EAAED,KAAK,CAACW,EAA7C;IAAiD,OAAO,EAAEN,SAA1D;IAAqE,GAAG,EAAEF,MAA1E;IAAA,wBACI;MAAK,SAAS,EAAC,WAAf;MAA2B,OAAO,EAAES,iBAApC;MAAuD,OAAO,EAAC,WAA/D;MAA2E,IAAI,EAAC,MAAhF;MAAuF,MAAM,EAAC,SAA9F;MAAwG,KAAK,EAAC,4BAA9G;MAAA,wBACQ;QAAM,CAAC,EAAC,iPAAR;QAA0P,IAAI,EAAC,MAA/P;QAAsQ,kBAAe;MAArR;QAAA;QAAA;QAAA;MAAA,QADR,eAEQ;QAAM,CAAC,EAAC,oBAAR;QAA6B,IAAI,EAAC,MAAlC;QAAyC,kBAAe;MAAxD;QAAA;QAAA;QAAA;MAAA,QAFR;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,eAKI;MAAM,SAAS,EAAC,UAAhB;MAAA,UAA4BZ,KAAK,CAACa;IAAlC;MAAA;MAAA;MAAA;IAAA,QALJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AASH;;GAxBed,M;;KAAAA,M"},"metadata":{},"sourceType":"module"}